import org.jooq.meta.jaxb.Logging

plugins {
    id("java")
    id("org.jetbrains.kotlin.jvm") version "1.9.20"
    id("nu.studer.jooq") version "8.2"
    id("org.flywaydb.flyway") version "9.22.3"
}

group 'org.battlehubs'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

flyway {
    driver = "org.postgresql.Driver"
    url = "jdbc:postgresql://0.0.0.0:5432/postgres"
    user = "postgres"
    password = "password"
}

dependencies {
    runtimeOnly("org.http4k:http4k-bom:5.18.2.0")
    implementation("org.http4k:http4k-core:5.18.2.0")
    runtimeOnly("org.http4k:http4k-server-undertow:5.18.2.0")
    implementation("org.http4k:http4k-client-apache:5.18.2.0")
    implementation("com.zaxxer:HikariCP:2.7.8")
    implementation("com.natpryce:konfig:1.6.10.0")
    implementation("org.flywaydb:flyway-core:9.22.3")
    implementation("org.flywaydb:flyway-mysql:9.22.3")
    implementation("org.postgresql:postgresql:42.7.3")
    implementation("dev.forkhandles:result4k:2.10.1.0")

    implementation("org.jooq:jooq:3.18.7")
    implementation("org.jooq:jooq-meta:3.18.7")
    implementation("org.jooq:jooq-codegen:3.18.7")

    jooqGenerator 'org.postgresql:postgresql:42.7.3'

    testImplementation("io.mockk:mockk:1.4.1")
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

jooq {
    version = '3.18.7'

    configurations {
        main {
            generateSchemaSourceOnCompilation = true
            generationTool {
                logging = Logging.WARN
                jdbc {
                    driver = 'org.postgresql.Driver'
                    url = 'jdbc:postgresql://localhost:5432/postgres'
                    user = 'postgres'
                    password = 'password'
                }
                generator {
                    name = 'org.jooq.codegen.KotlinGenerator'
                    database {
                        name = 'org.jooq.meta.postgres.PostgresDatabase'
                        inputSchema = 'battlehubs'
                    }
                    generate {
                        deprecated = false
                        kotlinSetterJvmNameAnnotationsOnIsPrefix = true
                        pojosAsKotlinDataClasses = true
                        fluentSetters = true
                    }
                    target {
                        packageName = 'com.battlehubs'
                        directory = 'build/generated-src/jooq/main'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}

test {
    useJUnitPlatform()
}